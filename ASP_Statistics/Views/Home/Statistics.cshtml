@using ASP_Statistics.Classes
@using ASP_Statistics.Enums
@model RequestViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-12">
        <form id="request-form">
            <div class="form-row">
                <div class="form-group mr-2 col">
                    <label asp-for="GameResultType">Game Result</label>
                    <select class="form-control custom-select" asp-for="GameResultType" asp-items="Html.GetEnumSelectList<GameResultType>()">
                        <option value="null">Please select one</option>
                    </select>
                </div>

                <div class="form-group mr-2 col">
                    <label asp-for="ForecastType">Forecast Type</label>
                    <select class="form-control custom-select" asp-for="ForecastType" asp-items="Html.GetEnumSelectList<ForecastType>()">
                        <option value="null">Please select one</option>
                    </select>
                </div>

                <div class="form-group mr-2 col">
                    <label asp-for="Month">Month</label>
                    <select class="form-control custom-select" asp-for="Month" asp-items="Html.GetEnumSelectList<Month>()">
                        <option value="null">Please select one</option>
                    </select>
                </div>

                <div class="form-group mr-2 col">
                    <label asp-for="Year">Year</label>
                    <select class="form-control custom-select" asp-for="Year" asp-items="ViewBag.Years">
                        <option value="null">Please select one</option>
                    </select>
                </div>


                <div class="form-group">
                    <label>Action</label>
                    <div class="form-control btn-group p-0 border-0">
                        <button type="reset" class="form-control btn-warning align-bottom mr-2">Reset</button>
                        <button type="button" id="filter-button" class="form-control btn-danger align-bottom">Filter</button>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group mr-2 col">
                    <label asp-for="LowerBound">Lower Bound</label>
                    <input class="form-control custom-select" asp-for="LowerBound"/>
                </div>
                <div class="form-group mr-2 col">
                    <label asp-for="UpperBound">Upper Bound</label>
                    <input class="form-control custom-select" asp-for="UpperBound"/>
                </div>
            </div>
        </form>
    </div>
    <div class="col-12">
        <div id="forecasts-table-container"></div>
    </div>
</div>

<div class="row">
    <div id="charts-container" class="col-12">

    </div>
</div>

<div class="row">
    <div class="col-12">
        <h1 class="text-danger">Strategies</h1>
    </div>
    <div id="strategy-charts-container" class="col-12"></div>
</div>

@*@{
        await Html.RenderPartialAsync("_ChartsPartial", null);
    }*@

@*<canvas id="myChart"></canvas>*@




@section Scripts
{
    <script>
        $(function() {
            $(".nav-item").removeClass("active");
            $("#nav-statistics").addClass("active");
        });
    </script>

    <script>
        $(function() {
            $("#filter-button").click(function() {
                $.post('@Url.Action("FilterForecasts")',
                    $("#request-form").serialize(),
                    function(result) {
                        $("#forecasts-table-container").html($(result));
                    });

                $.post("@Url.Action("GetCharts")",
                    $("#request-form").serialize(),
                    function(result) {
                        $("#charts-container").html($(result));
                    });

                $.post("@Url.Action("GetStrategyCharts")",
                    $("#request-form").serialize(),
                    function(result) {
                        $("#strategy-charts-container").html($(result));
                    });
            });

            $('#LowerBound').datepicker({
                uiLibrary: 'bootstrap4',
                maxDate: function() {
                    return $('#UpperBound').val();
                }
            });

            $('#UpperBound').datepicker({
                uiLibrary: 'bootstrap4',
                minDate: function() {
                    return $('#LowerBound').val();
                }
            });
        })
    </script>

    @*<script>
            $(function () {
                var ctx = document.getElementById("myChart");
                var myChart = new Chart(ctx,
                    {
                        type: 'bar',
                        data: {
                            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
                            datasets: [
                                {
                                    label: '# of Votes',
                                    data: [12, 19, 3, 5, 2, 3],
                                    backgroundColor: [
                                        'rgba(255, 99, 132, 0.2)',
                                        'rgba(54, 162, 235, 0.2)',
                                        'rgba(255, 206, 86, 0.2)',
                                        'rgba(75, 192, 192, 0.2)',
                                        'rgba(153, 102, 255, 0.2)',
                                        'rgba(255, 159, 64, 0.2)'
                                    ],
                                    borderColor: [
                                        'rgba(255,99,132,1)',
                                        'rgba(54, 162, 235, 1)',
                                        'rgba(255, 206, 86, 1)',
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(153, 102, 255, 1)',
                                        'rgba(255, 159, 64, 1)'
                                    ],
                                    borderWidth: 1
                                }
                            ]
                        },
                        options: {
                            scales: {
                                yAxes: [
                                    {
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }
                                ]
                            }
                        }
                    });
            });
        </script>*@
}
